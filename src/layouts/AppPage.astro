---
import type { CollectionEntry } from "astro:content";
import Root, { Props as RootProps } from "./Root.astro";

interface Props extends Omit<RootProps, "pageTitle"> {
  appEntry: CollectionEntry<"apps">;
  appSlug: string;
  pageTitleSuffix?: string;
}

const {
  appSlug,
  appEntry: {
    data: { title, help, releaseNotes },
  },
} = Astro.props;

const pathnames = [
  { href: `/apps/${appSlug}`, title },
  help && { href: `/apps/${appSlug}/help`, title: "Help" },
  releaseNotes && {
    href: `/apps/${appSlug}/release-notes`,
    title: "Release Notes",
  },
]
  .filter((p) => p)
  .map((p) => ({ ...p, current: p?.href == Astro.url.pathname }));

const pageTitle = [title, Astro.props.pageTitleSuffix ?? ""]
  .filter((x) => x)
  .join(": ");
---

<Root {...Astro.props} pageTitle={pageTitle}>
  <nav class="app-nav">
    {
      pathnames.map(({ title, href, current }) => (
        <a
          class="app-nav-link"
          href={href}
          aria-current={current ? "page" : undefined}
        >
          {title}
        </a>
      ))
    }
  </nav>
  <slot />
</Root>
