---
import { CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";
import AppPage from "../../../layouts/AppPage.astro";

export async function getStaticPaths() {
  const collection = await getCollection("apps");
  return collection.map((entry) => ({
    params: { app: entry.slug },
    props: { entry },
  }));
}

const entry = Astro.props.entry as CollectionEntry<"apps">;
const { Content } = await entry.render();

const {
  slug,
  data: {
    cover,
    downloadURL,
    help,
    icon,
    iconAlt,
    openGraphImage,
    platform,
    price,
    productHuntEmbed,
    purchasePolicy,
    purchaseURL,
    releaseNotes,
    subtitle,
    systemRequirements,
    title,
  },
} = entry;

const formatter = new Intl.NumberFormat(undefined, {
  style: "currency",
  currency: "USD",
});
---

<AppPage
  appEntry={entry}
  appSlug={slug}
  description={subtitle}
  openGraphImage={openGraphImage}
>
  <div class="app-page__content">
    <div class="app__above-fold">
      <div class="app__above-fold-images">
        {
          cover && (
            <figure class="app__cover-wrapper">
              <Image
                class:list="app__cover"
                fetchpriority="high"
                src={cover}
                alt=""
              />
            </figure>
          )
        }
        <figure class="app__icon-wrapper">
          <Image
            class:list="app__icon"
            fetchpriority="high"
            src={icon}
            alt={iconAlt}
          />
        </figure>
      </div>
      <p class="app__tagline">{subtitle}</p>
    </div>
    <div class="app__technicals">
      <div class="download-bar">
        <a class="try-button" href={downloadURL}
          >{price ? "Try for Free" : "Download"}</a
        >
        {
          price && (
            <a class="buy-button" href={purchaseURL}>
              <span>Buy</span>
              <small class="buy-button__price">{formatter.format(price)}</small>
            </a>
          )
        }
      </div>
      <div>
        {
          purchasePolicy && (
            <small class="app__purchasePolicy">{purchasePolicy}</small>
          )
        }
        <small class="app__sys-reqs">
          Requires {platform}
          {systemRequirements} or later.
        </small>
      </div>
      {
        productHuntEmbed && (
          <div class="product-hunt-wrapper">
            <Fragment set:html={productHuntEmbed} />
          </div>
        )
      }
    </div>
    <div class="app__prose">
      <Content />
    </div>
  </div>
</AppPage>
