---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import AppPage from "../../../layouts/AppPage.astro";
import DownloadBar from "../../../components/DownloadBar.astro";

export async function getStaticPaths() {
  const collection = await getCollection("apps");
  return collection.map((entry) => ({
    params: { app: entry.slug },
    props: { entry },
  }));
}

const entry: CollectionEntry<"apps"> = Astro.props.entry;
const { Content } = await entry.render();

const {
  slug,
  data: {
    cover,
    icon,
    iconAlt,
    openGraphImage,
    platform,
    price,
    productHuntEmbed,
    purchasePolicy,
    purchaseURL,
    subtitle,
    systemRequirements,
    cask,
  },
} = entry;

const downloadURL = Astro.url.pathname.replace(/\/+$/, "") + "/download";
---

<AppPage
  appEntry={entry}
  appSlug={slug}
  description={subtitle}
  openGraphImage={openGraphImage}
>
  <div class="app__above-fold">
    <div class="app__above-fold-images">
      {
        cover && (
          <figure class="app__cover-wrapper">
            <Image class="app__cover" fetchpriority="high" src={cover} alt="" />
          </figure>
        )
      }
      <figure class="app__icon-wrapper">
        <Image
          class="app__icon"
          fetchpriority="high"
          src={icon}
          alt={iconAlt}
        />
      </figure>
    </div>
    <p class="app__tagline h1">{subtitle}</p>
  </div>
  <div class="app__technicals">
    <DownloadBar
      purchaseURL={purchaseURL}
      downloadURL={downloadURL}
      price={price}
    />
    {
      cask && (
        <div class="app-cask">
          <p class="app-cask__or">Or:</p>
          <pre class="app-cask__code">brew install --cask {cask}</pre>
        </div>
      )
    }
    <div>
      {
        purchasePolicy && (
          <small class="app__purchase-policy">{purchasePolicy}</small>
        )
      }
      <small class="app__sys-reqs">
        Requires {platform}{' '}{systemRequirements} or later.
      </small>
    </div>
    {
      productHuntEmbed && (
        <div class="product-hunt-wrapper">
          <Fragment set:html={productHuntEmbed} />
        </div>
      )
    }
  </div>
  <div class="app__prose">
    <Content />
  </div>
</AppPage>
