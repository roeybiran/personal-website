---
import { CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";
import Page from "../../../layouts/Page.astro";

export async function getStaticPaths() {
  const appsEntries = await getCollection("apps");
  return appsEntries.map((entry) => ({
    params: { app: entry.slug },
    props: { entry },
  }));
}

// https://www.apple.com/macos/photos/
// https://www.apple.com/imovie/
// https://www.apple.com/pages/
// https://www.apple.com/numbers/
// https://www.apple.com/keynote/

const entry = Astro.props.entry as CollectionEntry<"apps">;
const { Content } = await entry.render();

const {
  data: {
    title,
    subtitle,
    cover,
    icon,
    iconAlt,
    downloadURL,
    platform,
    systemRequirements,
    price,
    purchaseURL,
    purchasePolicy,
    openGraphImage,
    productHuntEmbed,
  },
} = entry;

const formatter = new Intl.NumberFormat(undefined, {
  style: "currency",
  currency: "USD",
});
---

<Page title={title} description={subtitle} openGraphImage={openGraphImage}>
  <div class="root">
    <div class="above-fold">
      <div class="images">
        {
          cover && (
            <figure class="cover">
              <Image fetchpriority="high" src={cover} alt="" />
            </figure>
          )
        }
        <figure class="icon">
          <Image fetchpriority="high" src={icon} alt={iconAlt} />
        </figure>
      </div>
      <p class="tagline">{subtitle}</p>
    </div>
    <div class="below-fold vstack">
      <div class="center intrinsic and-text">
        <div class="vstack" style="--space:var(--size-2)">
          <div>
            <div
              class="cluster download-bar"
              style="--space:var(--size-2); --justify:center"
            >
              <a class="btn-primary" href={downloadURL}
                >{price ? "Try for Free" : "Download"}</a
              >
              {
                price && (
                  <a
                    class="cluster btn-primary"
                    style="--space:var(--size-2)"
                    href={purchaseURL}
                  >
                    <span>Buy</span>
                    <small>{formatter.format(price)}</small>
                  </a>
                )
              }
            </div>
          </div>
          <div class="terms">
            {purchasePolicy && <small>{purchasePolicy}</small>}
            <small>
              Requires {platform}
              {systemRequirements} or later.
            </small>
          </div>
        </div>
      </div>
      <div class="product-hunt-wrapper">
        {productHuntEmbed && <Fragment set:html={productHuntEmbed} />}
      </div>
      <div class="prose prose-layout content-app">
        <Content />
      </div>

    </div>
  </div>
</Page>

<style lang="scss">
  .product-hunt-wrapper {
    display: flex;
    justify-content: center;
  }
  h2 {
  }

  .root {
    margin-block: var(--size-3);
  }

  .images {
    display: grid;

    > * {
      grid-area: 1/1;
    }

    .icon {
      justify-self: center;
      align-self: flex-end;
      z-index: 1;
    }
  }

  .above-fold {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .tagline {
    text-align: center;
    font-size: var(--font-size-6);
    margin-block-end: var(--size-3);
    padding-inline: var(--bleed);
  }

  .icon {
    margin-block-start: calc(-1 * var(--size-6));
    max-inline-size: var(--size-12);
  }

  h1 {
    font-weight: var(--bold);
  }

  .terms small {
    display: block;
    font-size: var(--font-size-0);
    color: var(--text-2);
  }

  .cover {
    inline-size: 100%;

    -webkit-mask: linear-gradient(to top, transparent 0%, black 50%);
    mask: linear-gradient(to top, transparent 0%, black 50%);

    img {
      margin-inline: auto;
      inline-size: min(100%, var(--size-15));
      object-fit: cover;
      object-position: top;
    }
  }

  .below-fold {
    padding-inline: var(--bleed);
  }
</style>
