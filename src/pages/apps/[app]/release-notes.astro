---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import AppPage from "../../../layouts/AppPage.astro";
import "../../../styles/pages/release-notes.scss";

export async function getStaticPaths() {
  const collection = await getCollection("apps");
  return collection
    .map((entry) => {
      if (entry.data.release.type === "indie") {
        return {
          params: {
            app: entry.slug,
          },
          props: {
            slug: entry.slug,
            appcast: entry.data.release.sparkleAppcastURL,
            title: entry.data.title,
          },
        };
      }
    })
    .filter(Boolean);
}

const { appcast, slug, title } = Astro.props;

let html: string | undefined;
const appcastResponse = await fetch(appcast).then((v) => v.text());
const [, releaseNotesURL] = appcastResponse.match(
  /<sparkle:releaseNotesLink>(.+?)<\/sparkle:releaseNotesLink>/
) ?? [];
if (releaseNotesURL) {
  const releaseNotes = await fetch(releaseNotesURL).then((v) => v.text());
  ([, html] = releaseNotes.match(/<body>(.+?)<\/body>/s) ?? []);
}
---

<AppPage title={`${title}: Release Notes`} {slug} appName={title}>
  {html && <div class="content-release-notes" set:html={html} />}
</AppPage>
